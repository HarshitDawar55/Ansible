- name: Ansible Playbook to configure a webserver inside a Docker Container!
  hosts: Docker_Webserver
  tasks:
    # Adding the Docker Yum Repository link
    - name: Adding the Yum Repository for Docker
      yum_repository:
        name: Docker-Repo
        file: docker-ce
        description: Configuring the Docker Community Edition repo
        baseurl: https://download.docker.com/linux/centos/7/x86_64/stable/
        gpgcheck: no
      register: DockerRepoStatus

    - name: Printing Docker Repo Configuration Status
      debug:
        msg: "Does Configuration Failed: {{ DockerRepoStatus.failed }}"

    - name: Downloading & Installing the Docker Software
      when: DockerRepoStatus.failed == false
      shell: dnf install -y docker-ce --nobest
      args:
        warn: false
      register: DIS

    - name: Printing Docker Installation Success
      debug:
        msg: "Docker Installed: {{ DIS.rc }}   [Yes if 0 , otherwise No]"

    - name: Disabling the Firewalld for Docker Operations with the external entities!
      when: DIS.rc == 0
      service:
        name: firewalld
        state: stopped
      register: Firewall_Status

    - name: Firewall Status
      debug:
        msg: "Firewall Daemon State: {{ Firewall_Status.state }}"

    - name: Starting the Docker Services
      when: DIS.rc == 0
      service:
        name: docker
        state: started
        enabled: yes
      register: Docker_Start_Status

    - name: Printing the Docker Running Status
      debug:
        msg: "Docker Services Enabled & Started: {{Docker_Start_Status.state}}"

    - name: Installing Docker-py to support docker pull
      when: Docker_Start_Status.state == "started"
      pip:
        name: "docker-py"
        state: present
      register: docker_py_status

    - name: Docker-py Status
      debug:
        msg: "Docker Py Download Failed Status: {{ docker_py_status.failed}}"


    - name: Downloading Webserver Image for Docker
      when: Docker_Start_Status.state == "started"
      docker_image:
        name: httpd
        tag: latest
        source: pull
        state: present
      register: DockerPull

    - name: Docker Image Download Status
      debug:
        msg: " Docker Image Pull Failed: {{ DockerPull.failed }}"

    - name: Downloading Webserver in Local Machine
      package:
        name: httpd
        state: present
      register: WS_Local

    - name: Printing Local Webserver Download Status
      debug:
        msg: " Webserver Download Failed: {{ WS_Local.failed }}"

    - name: Exeuting the Webserver
      service:
        name: httpd
        state: started
        enabled: yes
      register: WS

    - name: Printing the status of the Webserver
      debug:
        msg: " Webserver Service State: {{WS.state}}"

    - name: Running the Webserver Container
      when: DockerPull.failed == false
      docker_container:
        name: Webserver
        image: httpd
        state: started
        published_ports:
          "0.0.0.0:80:80"
        command: docker cp /index.php /var/www/html/
      register: Docker_Container_Status

    - name: Docker Container Running Status
      debug:
        msg: " Docker Container Launching Failed:  {{ Docker_Container_Status.failed }}"

