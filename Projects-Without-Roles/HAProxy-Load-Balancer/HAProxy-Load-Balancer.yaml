- name: Play to configure the load balancer!
  vars:
    - dvd_mount_point = "/dvd/"
    - conf_src = "haproxy.conf.j2"
    - conf_dest = "/etc/haproxy/haproxy.conf"
    - web_conf = "index.html"
    - web_dest = "/var/www/html/"
  hosts: LB
  tasks:
    - name: Mounting the Redhat DVD for the HAProxy Software!
      mount:
        path: "{{ dvd_mount_point }}"
        src: /dev/sr0
        state: present
        fstype: "iso9660"

    - name: Installing the HaProxy Software!
      package:
        name: "haproxy"
        state: present

    - name: Copying the Configuration File of the HaProxy!
      template:
        src: "{{ conf_src }}"
        dest: "{{ conf_dest }}"
        mode: "644"

    - name: Starting the Load Balancer services!
      service:
        name: "haproxy"
        state: started
        enabled: yes


- name: Play to Configure the Webservers for the Load Balancer!
  hosts: Webservers
  tasks:
    - name: Mounting the Redhat DVD for the Apache Webserver Software!
      mount:
        path: "{{ dvd_mount_point }}"
        src: /dev/sr0
        state: present
        fstype: "iso9660"

    - name: Installing Apache Webserver
      when: "{{ ansible_facts['distribution'] }}" == "RedHat"
      package:
        name: "httpd"
        state: present

    - name: Copying the Webpage to the Destination
      when: "{{ ansible_facts['distribution'] }}" == "RedHat"
      template:
        src: "{{ web_conf }}"
        dest: "{{ web_dest }}"
        mode: "644"
      notify: Start Httpd

    - name: Starting the services of the Webserver
      when: "{{ ansible_facts['distribution'] }}" == "RedHat"
      service:
        name: "httpd"
        state: started
        enabled: yes

    - name: Installing Apache Webserver
      when: "{{ ansible_facts['distribution'] }}" == "Ubuntu"
      package:
        name: "apache2"
        state: present

    - name: Copying the Webpage to the Destination
      when: "{{ ansible_facts['distribution'] }}" == "Ubuntu"
      template:
        src: "{{ web_conf }}"
        dest: "{{ web_dest }}"
        mode: "644"
      notify: Start Httpd Ubuntu

    - name: Starting the services of the Webserver
      when: "{{ ansible_facts['distribution'] }}" == "Ubuntu"
      service:
        name: "apache2"
        state: started
        enabled: yes

    - name: Adding the Rule in the Firewall to allow Traffic on Port 80!
      firewalld:
        permanent: yes
        port: 80/tcp
        state: enabled

  handlers:
    - name: Start Httpd
      service:
        name: "httpd"
        state: restarted

    - name: Start Httpd Ubuntu
      service:
        name: "apache2"
        state: restarted
